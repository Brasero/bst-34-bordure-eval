body {
 margin: 0;
}


.flex {
 display: flex;
 flex-direction: column;
 justify-content: center;
 gap: 5rem;
 border: 4px violet solid;
}


main > div, section {
 border: 1px solid black;
 padding: 2rem;
 background: white;
}

/*.absolu {*/

/* la position "absolute" permet déplacer l'élément par rapport à la position du premier élément parent
qui a la propriété position avec la valeur relative ou absolute. L'élément BODY est configuré
par défaut comme étant position relative ce qui en fait une origine par défaut des éléments
ainsi positionné.
 */

/* max-width: 100%;*/
/* position: absolute;*/
/* border: 3px red solid;*/
/* bottom: 0;*/
/* right: 0;*/
/* left: 0;*/
/* margin: 0;*/
/*}*/

/*.relative {*/

/* La position "relative" permet de déplacer l'élément par rapport à sa position initiale dans le flux. */

/* position: relative;*/
/* border: 3px green solid;*/
/* top: -100px;*/
/* left: 50px;*/
/* z-index: -2;*/
/*}*/

/*.card {*/

/* La position "fixed" permet de positionner un élément  par rapport aux bord du viewport, c'est à dire du cadre
d'affichage du navigateur internet. c'est le cas de parties du document qui collent au bord de
la fenêtre du navigateur même si l'on scrolle le document. */

/* position: fixed;*/
/* bottom: 0;*/
/* right: 0;*/
/* top: 0;*/
/* left: 0;*/
/* max-width: 100%;*/
/* background: rgba(0,0,0, 0.5);*/
/* z-index: -1;*/
/*}*/

/*.sticky {*/

/* La position "sticky" permet de positionner un élément par rapport aux bord du viewport, c'est à dire du cadre
d'affichage du navigateur internet mais seulement si l'élément est en dehors de celui ci. En
général ce comportement s'observe lorsque l'on scrolle le document et que l'on observe des
parties qui collent aux bord alors qu'ils qu'ils ne devraient plus être visibles. */


/* position: sticky;*/
/* !*width: 100%;*!*/
/* border: 3px salmon solid;*/
/* top: 100px;*/
/* right: 0;*/
/* left: 0;*/
/* display: flex;*/
/* justify-content: space-between;*/
/*}*/

.card {
 width: 800px;
 height: 300px;
 padding: 0;
 display: flex;
 flex-direction: column;
 position: relative;
}

.card .img {
 width: 100%;
 background: grey;
}

.card .reduc {
 position: absolute;
 background: darkred;
 width: 150px;
 height: 200px;
 top: 50%;
 left: 50%;
 transform: translate(-50%, -50%);
 transition: .3s all ease;
}

.card .reduc:hover {

 /* Transform permet d'appliqué des transformation au élément, il s'utilise avec des fonction css
  comme "rotate", "translate", "scale", ...
  */

 transform: translate(-50%, -50%) scale(.7);

 /* Le box-shadow permet d'appliqué une ombre à un élément, avec la valeur "inset" cette ombre est
  intérieur, sans cette valeur elle est extérieur
  Les valeur dans l'ordre définisse : Le décalage vertical de l'ombre, le décalage horizontal,
  le flou, la propagation et enfin la couleur de l'ombre.
  */

 box-shadow: 0px 0px 20px 10px black inset;
}

.click {
 border: 0;
 box-shadow: 1px 1px 4px 0px rgba(0, 0, 0, 0.4);
 text-shadow: 2px 2px 1px blue;
 transition: .2s all ease;
}

.click:active {
 box-shadow: 1px 1px 2px 0px rgba(0, 0, 0, 0.4) inset;
}


/* MODAL et label flottant */

/* Exemple d'une modal placé grace au position (dé-commenter ce code pour voir le résultat) */

/*.modal {*/
/* position: fixed;*/
/* z-index: 3;*/
/* top: 0;*/
/* bottom: 0;*/
/* left: 0;*/
/* right: 0;*/
/* display: flex;*/
/* justify-content: center;*/
/* align-items: center;*/
/* border: 0;*/
/* background: rgba(0,0,0,0.7);*/
/*}*/

/*.modal-container {*/
/* background: white;*/
/* width: 80%;*/
/* min-width: 250px;*/
/* height: 70%;*/
/* display: flex;*/
/* justify-content: center;*/
/* align-items: center;*/
/* border-radius: 15px;*/
/* box-shadow: 2px 2px 5px 8px rgba(0,0,0,0.4);*/
/*}*/

/*.floating {*/
/* position: relative;*/
/*}*/

/*.floating span {*/
/* position: absolute;*/
/* border-radius: 5px 5px 0 0;*/
/* left: 5px;*/
/* top: 50%;*/
/* background: white;*/
/* transform: translateY(-50%);*/
/* transition: all .3s ease;*/
/* padding-inline: 1rem;*/
/*}*/

/*.floating input {*/
/* outline: 0;*/
/* border: 2px solid cyan;*/
/* border-radius: 5px;*/
/*}*/

/*.floating input:focus ~ span {*/
/* transform: translateY(-140%);*/
/* border: 2px solid cyan;*/
/* border-bottom: 2px solid white;*/
/*}*/

/*.floating input::placeholder {*/
/* opacity: 0;*/
/*}*/

/*.floating input:not(:placeholder-shown) ~ span {*/
/* transform: translateY(-140%);*/
/* border: 2px solid cyan;*/
/* border-bottom: 2px solid white;*/
/*}*/

/* Modal et label flottant END */


header {
 position: sticky;
 top: -60px;
 z-index: 10;
 display: flex;
 width: 100%;
 justify-content: space-between;
 align-items: center;
 background: salmon;
 color: white;
 transition: .3s all ease;
}

header:hover {
 top: 0;
}

header ul {
 display: flex;
 gap: 1rem;
 list-style: none;
}